{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport MeetupList from '../components/meetups/MeetupList';\nimport { useSession, signIn, signOut } from \"next-auth/react\";\n\nfunction HomePage(props) {\n  _s();\n\n  var _useSession = useSession(),\n      session = _useSession.data;\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Signed in as \", session.user.email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return signOut();\n        },\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Not signed in \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return signIn();\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"xGqsfA9Yc4bug2CeORcyTsHwvXY=\", false, function () {\n  return [useSession];\n});\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","useSession","signIn","signOut","HomePage","props","session","data","user","email","meetups"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,QAA4C,iBAA5C;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,oBACKJ,UAAU,EADf;AAAA,MACPK,OADO,eACbC,IADa;;AAErB,MAAID,OAAJ,EAAa;AACT,wBAAO;AAAA,kCACWA,OAAO,CAACE,IAAR,CAAaC,KADxB,oBAC+B;AAAA;AAAA;AAAA;AAAA,cAD/B,eAEH;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMN,OAAO,EAAb;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAIH;;AAED,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEE,KAAK,CAACK;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gDACkB;AAAA;AAAA;AAAA;AAAA,cADlB,eAEI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMR,MAAM,EAAZ;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBAFJ;AAAA,kBADJ;AASH;;GAlBQE,Q;UACqBH,U;;;KADrBG,Q;;AA4CT,eAAeA,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport { useSession, signIn, signOut } from \"next-auth/react\"\n\nfunction HomePage(props) {\n    const { data: session } = useSession();\n    if (session) {\n        return <>\n            Signed in as {session.user.email} <br />\n            <button onClick={() => signOut()}>Sign out</button>\n        </>\n    }\n\n    return (\n        <>\n            <MeetupList meetups={props.meetups} />\n            <>\n                Not signed in <br />\n                <button onClick={() => signIn()}>Sign in</button>\n            </>\n        </>\n    )\n}\n\n\nexport async function getStaticProps() {\n    // fetch data from an API\n    const client = await MongoClient.connect(\n        'mongodb+srv://Abdulla:abdulla007331415@cluster0.oi88h.mongodb.net/?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection('test');\n    const meetups = await meetupsCollection.find().toArray();\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map((meetup) => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString(),\n            })),\n        },\n        revalidate: 1\n    };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}