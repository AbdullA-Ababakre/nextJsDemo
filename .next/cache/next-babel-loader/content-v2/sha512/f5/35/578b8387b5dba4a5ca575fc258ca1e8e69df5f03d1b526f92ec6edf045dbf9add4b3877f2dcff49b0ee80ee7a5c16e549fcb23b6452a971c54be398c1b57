{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/signin.js\",\n    _s = $RefreshSig$();\n\nimport { signIn } from \"next-auth/react\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nexport var __N_SSP = true;\nexport default function SignIn(_ref) {\n  _s();\n\n  var _this = this;\n\n  var csrfToken = _ref.csrfToken,\n      providers = _ref.providers;\n  var router = useRouter();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(null),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var signInUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var options, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(\"email,password\", email, password);\n              options = {\n                redirect: false,\n                email: email,\n                password: password\n              };\n              _context.next = 5;\n              return signIn('credentials', options);\n\n            case 5:\n              res = _context.sent;\n              setMessage(null, res);\n\n              if (res !== null && res !== void 0 && res.error) {\n                setMessage(res.error);\n              }\n\n              return _context.abrupt(\"return\", router.push('/'));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function signInUser(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      action: \"/api/auth/signin/email\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"csrfToken\",\n        type: \"hidden\",\n        defaultValue: csrfToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign in with Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"csrfToken\",\n        type: \"hidden\",\n        defaultValue: csrfToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: function onChange(e) {\n            return setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: password,\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick(e) {\n          return signInUser(e);\n        },\n        children: \"Sign in with Credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), Object.values(providers).map(function (provider) {\n      if (provider.name === 'Email' || provider.name === 'Credentials') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return signIn(provider.id);\n          },\n          children: [\"Sign in with \", provider.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, _this)\n      }, provider.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, _this);\n    })]\n  }, void 0, true);\n}\n\n_s(SignIn, \"/20WMbTYCTzx+g8ZjG2132HsIzU=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/signin.js"],"names":["signIn","useState","useEffect","useRouter","SignIn","csrfToken","providers","router","email","setEmail","password","setPassword","message","setMessage","signInUser","e","preventDefault","console","log","options","redirect","res","error","push","target","value","color","Object","values","map","provider","name","id"],"mappings":"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","sourcesContent":["import { getCsrfToken, getProviders, signIn, getSession } from \"next-auth/react\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nexport default function SignIn({ csrfToken, providers }) {\n    const router = useRouter();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const signInUser = async (e) => {\n        e.preventDefault();\n        console.log(\"email,password\", email, password);\n        let options = { redirect: false, email, password }\n        const res = await signIn('credentials', options);\n        setMessage(null, res);\n        if (res?.error) {\n            setMessage(res.error);\n        }\n\n        return router.push('/');\n    }\n\n    return (\n        <>\n            <form method=\"post\" action=\"/api/auth/signin/email\">\n                <input name=\"csrfToken\" type=\"hidden\" defaultValue={csrfToken} />\n                <label>\n                    Email address\n                    <input type=\"email\" id=\"email\" name=\"email\" />\n                </label>\n                <button type=\"submit\">Sign in with Email</button>\n            </form>\n\n            <form action=\"\">\n                <input name=\"csrfToken\" type=\"hidden\" defaultValue={csrfToken} />\n                <label>\n                    Email address\n                    <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label>\n                    Password\n                    <input type=\"email\" id=\"email\" name=\"email\" value={password} onChange={e => setPassword(e.target.value)} />\n                </label>\n                <p style={{ color: 'red' }}>{message}</p>\n                <button onClick={(e) => signInUser(e)}>Sign in with Credentials</button>\n            </form>\n\n\n\n            {\n                Object.values(providers).map((provider) => {\n                    if (provider.name === 'Email' || provider.name === 'Credentials') {\n                        return;\n                    }\n                    return (\n                        <div key={provider.name}>\n                            <button onClick={() => signIn(provider.id)}>\n                                Sign in with {provider.name}\n                            </button>\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport async function getServerSideProps(context) {\n    const { req } = context;\n    const session = await getSession({ req })\n    if (session) {\n        // Signed in\n        return {\n            redirect: { destination: \"/\" }\n        }\n    }\n    const csrfToken = await getCsrfToken(context);\n    const providers = await getProviders();\n\n    return {\n        props: { csrfToken, providers }\n    }\n}"]},"metadata":{},"sourceType":"module"}