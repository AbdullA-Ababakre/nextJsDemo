{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is a second meetup!'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://Abdulla:abdulla007331415@cluster0.oi88h.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('test');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EACD,wHAJR;AAKIC,EAAAA,OAAO,EAAE,iCALb;AAMIC,EAAAA,WAAW,EAAE;AANjB,CADkB,EASlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EACD,wHAJR;AAKIC,EAAAA,OAAO,EAAE,kCALb;AAMIC,EAAAA,WAAW,EAAE;AANjB,CATkB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC;AAEA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,gGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,MAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAC9BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADgB;AAE9BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFc;AAG9BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHgB;AAI9BF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ0B,OAAb,CAAZ;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAehB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nconst DUMMY_MEETUPS = [\n    {\n        id: 'm1',\n        title: 'A First Meetup',\n        image:\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        address: 'Some address 5, 12345 Some City',\n        description: 'This is a first meetup!',\n    },\n    {\n        id: 'm2',\n        title: 'A Second Meetup',\n        image:\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        address: 'Some address 10, 12345 Some City',\n        description: 'This is a second meetup!',\n    },\n];\n\nfunction HomePage(props) {\n    return <MeetupList meetups={props.meetups} />;\n}\n\nexport async function getStaticProps() {\n    // fetch data from an API\n\n    const client = await MongoClient.connect(\n        'mongodb+srv://Abdulla:abdulla007331415@cluster0.oi88h.mongodb.net/?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection('test');\n    const meetups = await meetupsCollection.find().toArray();\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map((meetup) => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString(),\n            })),\n        },\n        revalidate: 1\n    };\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}