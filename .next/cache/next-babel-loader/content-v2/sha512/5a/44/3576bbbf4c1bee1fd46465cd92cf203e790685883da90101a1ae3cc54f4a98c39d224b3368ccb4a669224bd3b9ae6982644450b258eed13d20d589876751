{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport { useSession, signIn, signOut } from \"next-auth/react\";\n\nfunction HomePage(props) {\n  const {\n    data: session\n  } = useSession();\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Signed in as \", session.user.email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => signOut(),\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Not signed in \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => signIn(),\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n} // getServerSideProps \n// getStaticProps \n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://Abdulla:abdulla007331415@cluster0.oi88h.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('test');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage; // prerender","map":{"version":3,"sources":["/Users/bytedance/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","MongoClient","useSession","signIn","signOut","HomePage","props","data","session","user","email","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,QAA4C,iBAA5C;;AAKA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAoBN,UAAU,EAApC;;AACA,MAAIM,OAAJ,EAAa;AACT,wBAAO;AAAA,kCACWA,OAAO,CAACC,IAAR,CAAaC,KADxB,oBAC+B;AAAA;AAAA;AAAA;AAAA,cAD/B,eAEH;AAAQ,QAAA,OAAO,EAAE,MAAMN,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAIH;;AAID,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEE,KAAK,CAACK;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gDACkB;AAAA;AAAA;AAAA;AAAA,cADlB,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMR,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBAFJ;AAAA,kBADJ;AASH,C,CAED;AACA;;;AAEA,OAAO,eAAeS,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,gGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,MAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHd,IAAAA,KAAK,EAAE;AACHK,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAC9BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADgB;AAE9BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFc;AAG9BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHgB;AAI9BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ0B,OAAb,CAAZ;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAexB,QAAf,C,CAGA","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport { useSession, signIn, signOut } from \"next-auth/react\"\n\n\n\n\nfunction HomePage(props) {\n\n    const { data: session } = useSession()\n    if (session) {\n        return <>\n            Signed in as {session.user.email} <br />\n            <button onClick={() => signOut()}>Sign out</button>\n        </>\n    }\n\n\n\n    return (\n        <>\n            <MeetupList meetups={props.meetups} />\n            <>\n                Not signed in <br />\n                <button onClick={() => signIn()}>Sign in</button>\n            </>\n        </>\n    )\n}\n\n// getServerSideProps \n// getStaticProps \n\nexport async function getStaticProps() {\n    // fetch data from an API\n    const client = await MongoClient.connect(\n        'mongodb+srv://Abdulla:abdulla007331415@cluster0.oi88h.mongodb.net/?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection('test');\n    const meetups = await meetupsCollection.find().toArray();\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map((meetup) => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString(),\n            })),\n        },\n        revalidate: 1\n    };\n}\n\nexport default HomePage;\n\n\n// prerender\n"]},"metadata":{},"sourceType":"module"}